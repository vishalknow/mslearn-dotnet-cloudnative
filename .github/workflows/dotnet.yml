# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Test Container App CI CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore dotnet-docker/eShopLite.sln
      
    - name: Build
      run: dotnet build dotnet-docker/eShopLite.sln

#    - name: Docker Image Creation
#      run: |
#        docker build -t product:latest -f dotnet-docker/finished-files/Dockerfile ./dotnet-docker
#        docker build -t store:latest -f dotnet-docker/finished-files/Dockerfile.store ./dotnet-docker

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Log in to ACR
      run: az acr login --name ${{ secrets.ACR_NAME }}

    - name: Build and tag Docker image
      run: |
        docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/product:latest -f dotnet-docker/finished-files/Dockerfile ./dotnet-docker
        docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/store:latest -f dotnet-docker/finished-files/Dockerfile.store ./dotnet-docker

    - name: Push image to ACR
      run: |
        docker push ${{ secrets.ACR_NAME }}.azurecr.io/product:latest
        docker push ${{ secrets.ACR_NAME }}.azurecr.io/store:latest

    - name: Create ACA environment
      run: |
       az containerapp env create \
        --name my-aca-env \
        --resource-group ${{ secrets.RESOURCE_GROUP }} \
        --location ${{ secrets.AZURE_REGION }}


    - name: Create Azure Container App (first-time only)
      run: |
        az containerapp create \
          --name aca-product \
          --resource-group ${{ secrets.RESOURCE_GROUP }} \
          --environment my-aca-env \
          --image ${{ secrets.ACR_NAME }}.azurecr.io/product:latest \
          --registry-server ${{ secrets.ACR_NAME }}.azurecr.io \
          --registry-username ${{ secrets.ACR_USERNAME }} \
          --registry-password ${{ secrets.ACR_PASSWORD }} \
          --ingress external \
          --target-port 0 

        PRODUCT_FQDN=$(az containerapp show \
          --name aca-product \
          --resource-group ${{ secrets.RESOURCE_GROUP }} \
          --query properties.configuration.ingress.fqdn \
          -o tsv)

        az containerapp create \
          --name aca-store \
          --resource-group ${{ secrets.RESOURCE_GROUP }} \
          --environment my-aca-env \
          --image ${{ secrets.ACR_NAME }}.azurecr.io/store:latest \
          --registry-server ${{ secrets.ACR_NAME }}.azurecr.io \
          --registry-username ${{ secrets.ACR_USERNAME }} \
          --registry-password ${{ secrets.ACR_PASSWORD }} \
          --ingress external \
          --target-port 0 

        az containerapp update \
          --name aca-store \
          --resource-group ${{ secrets.RESOURCE_GROUP }} \
          --set-env-vars ProductEndpoint=https://$PRODUCT_FQDN//api//product

#    - name: Deploy to Azure Container App
#      run: |
#        az containerapp update \
#          --name ${{ secrets.ACA_NAME }} \
#          --resource-group ${{ secrets.RESOURCE_GROUP }} \
#          --image ${{ secrets.ACR_NAME }}.azurecr.io/product:latest \
#          --registry-server ${{ secrets.ACR_NAME }}.azurecr.io
